const { AttachmentBuilder } = require('discord.js');
const fs = require('fs');
const config = JSON.parse(fs.readFileSync('./config.json'));
module.exports = {
    name: "panel",
    async execute(interaction, client) {
        let balances = JSON.parse(fs.readFileSync('./settings/accounts.json'))
        let mass = ["ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è | –ë–∞–ª–∞–Ω—Å | –ü–æ–∫—É–ø–æ–∫ | –ü–æ—Ç—Ä–∞—á–µ–Ω–æ"];
        for (let i = 0; i < balances.length; i++) {
            mass.push(`${balances[i].id} | ${balances[i].balance} | ${balances[i].buyings} | ${balances[i].spended}`)
        }
        let str = mass.join("\n");
        fs.writeFileSync('./balances.txt', str);
        try {
            const seller = await client.users.fetch(config.owner);
            const log = {
                embeds: [{
                    title: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —É–¥–∞–ª–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–æ–≤",
                    description: "–£–¥–∞–ª–∏–ª: " + interaction.user.toString()
                }],
                files:[new AttachmentBuilder('./balances.txt'), new AttachmentBuilder('./settings/accounts.json')],
            }
            await seller.send(log);
            const perms = config.permissions;
            perms.forEach(async us => {
                if (us.accesslvl >= 4) {
                    const u = await client.users.fetch(us.userid);
                    u.send(log);
                }
            });
        } catch (err) {console.log(err)}
        await interaction.update({
            embeds: [
                {
                    title: "–í—Å–µ –±–∞–ª–∞–Ω—Å—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –æ—á–∏—â–µ–Ω—ã",
                    description: "–í—Å–µ –∞–∫–∫–∞—É–Ω—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π **—É–¥–∞–ª–µ–Ω—ã**!\n–§–∞–π–ª–∏–∫ —Å –±–µ–∫–∞–ø–∞–º–∏ –ø—Ä–æ—à–ª—ã—Ö –±–∞–ª–∞–Ω—Å–æ–≤ **–ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω –≤—ã—à–µ**s!"
                }
            ],
            files:[new AttachmentBuilder('./balances.txt'), new AttachmentBuilder('./settings/accounts.json')],
            components: [
                {
                    type: 1,
                    components: [
                        {
                            type: 2,
                            label: "–ù–∞–∑–∞–¥",
                            emoji: "üîô",
                            style: 1,
                            custom_id: "danger"
                        }
                    ]
                }
            ]
        })
        fs.writeFileSync('./settings/accounts.json', '[]');
    }
}